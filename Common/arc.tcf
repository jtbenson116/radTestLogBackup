<?xml version="1.0" encoding="UTF-8"?>
<config_list>
  <tool_config version="1.0.54" mwdt_version="L-2016.06" />
  <configuration name="BCRs" filename="bcr_contents.txt">
    <string><![CDATA[
	0x4	0x52		IDENTITY
	0x60	0x2		BCR_VER
	0x68	0x10		VECBASE_AC_BUILD
	0x6e	0xc902		RF_BUILD
	0x72	0x10216105	D_CACHE_BUILD
	0x75	0x10104		TIMER_BUILD
	0x77	0x226204	I_CACHE_BUILD
	0x7c	0x3		SWAP_BUILD
	0x7d	0x3		NORM_BUILD
	0x7e	0x2		MINMAX_BUILD
	0x7f	0x303		BARREL_BUILD
	0xc0	0x1880005	BPU_BUILD
	0xc1	0x2447402	ISA_CONFIG
	0xc7	0x202		ECC_BUILD
	0xcf	0x101		CLUSTER_BUILD
	0xf3	0x11122001	IRQ_BUILD
	0xf5	0x40503		PCT_BUILD
	0xf6	0x710002	CC_BUILD
]]></string>
  </configuration>
  <configuration name="mw_compiler" filename="ccac.arg">
    <string><![CDATA[
	-arcv2hs
	-core2
	-Hrgf_banked_regs=32
	-HL
	-Xcode_density
	-Xdiv_rem=radix4
	-Xswap
	-Xbitscan
	-Xmpy_option=mac
	-Xshift_assist
	-Xbarrel_shifter
	-Xtimer0
]]></string>
  </configuration>
  <configuration name="mw_debugger" filename="mdb.arg">
    <string><![CDATA[
	-arcv2hs 
	-core2 
	-rgf_num_banks=2 
	-rgf_banked_regs=32 
	-rgf_num_wr_ports=2 
	-Xunaligned 
	-Xcode_density 
	-Xswap 
	-Xbitscan 
	-Xmpy_option=none 
	-Xshift_assist 
	-Xbarrel_shifter 
	-Xtimer0 
	-Xtimer0_level=1 
	-bpu_bc_entries=256 
	-bpu_pt_entries=2048 
	-bpu_rs_entries=4 
	-bpu_bc_full_tag=0 
	-bpu_bc_tag_size=4 
	-bpu_tosq_entries=5 
	-bpu_fb_entries=2 
	-interrupts=32 
	-interrupt_priorities=2 
	-ext_interrupts=18 
	-firq 
	-interrupt_base=0x0 
	-error_prot_ver=2 
	-error_prot_ecc=2 
	-dcache=32768,32,2,a 
	-dcache_feature=2 
	-dcache_mem_cycles=2 
	-icache=32768,32,4,a 
	-icache_feature=2 
	-Xpct_counters=4 
	-Xpct_interrupt 
]]></string>
  </configuration>
  <configuration name="nSIM" filename="nsim.props">
    <string><![CDATA[
	nsim_isa_family=av2hs
	nsim_isa_core=2
	arcver=0x52
	nsim_isa_rgf_num_banks=2
	nsim_isa_rgf_banked_regs=32
	nsim_isa_rgf_num_regs=32
	nsim_isa_rgf_num_wr_ports=2
	nsim_isa_big_endian=0
	nsim_isa_lpc_size=32
	nsim_isa_pc_size=32
	nsim_isa_addr_size=32
	nsim_isa_ad_option=1
	nsim_isa_code_density_option=2
	nsim_isa_swap_option=1
	nsim_isa_bitscan_option=1
	nsim_isa_mpy_option=0
	nsim_isa_shift_option=3
	nsim_isa_enable_timer_0=1
	nsim_isa_timer_0_int_level=1
	nsim_bpu_bc_entries=256
	nsim_bpu_pt_entries=2048
	nsim_bpu_rs_entries=4
	nsim_bpu_bc_full_tag=0
	nsim_bpu_bc_tag_size=4
	nsim_bpu_tosq_entries=5
	nsim_bpu_fb_entries=2
	nsim_isa_number_of_interrupts=32
	nsim_isa_number_of_levels=2
	nsim_isa_number_of_external_interrupts=18
	nsim_isa_fast_irq=1
	nsim_isa_intvbase_preset=0x0
	nsim_isa_error_prot=2
	nsim_isa_error_prot_ecc=2
	dcache=32768,32,2,a
	nsim_isa_dc_feature_level=2
	nsim_isa_dc_mem_cycles=2
	icache=32768,32,4,a
	nsim_isa_ic_feature_level=2
	nsim_isa_pct_counters=4
	nsim_isa_pct_interrupt=1
]]></string>
  </configuration>
  <configuration name="IDE" filename="ide.props">
    <string><![CDATA[
	processor.family=5
	processor.core_version=2
	processor.family_name=arcv2hs
	processor.rgf_num_banks=2
	processor.rgf_banked_regs=32
	processor.rgf_num_wr_ports=2
	processor.endian=little
	processor.lpc_size=32
	processor.pc_size=32
	processor.addr_size=32
	processor.Xunaligned=1
	processor.Xcode_density=1
	processor.Xswap=1
	processor.Xbitscan=1
	processor.Xmpy_option=none
	processor.Xshift_assist=1
	processor.Xbarrel_shifter=1
	processor.Xtimer0=1
	processor.Xtimer0_level=1
	processor.bpu_bc_entries=256
	processor.bpu_pt_entries=2048
	processor.bpu_rs_entries=4
	processor.bpu_bc_full_tag=0
	processor.bpu_bc_tag_size=4
	processor.bpu_tosq_entries=5
	processor.bpu_fb_entries=2
	processor.interrupts=32
	processor.interrupt_priorities=2
	processor.ext_interrupts=18
	processor.firq=1
	processor.interrupt_base=0x0
	processor.error_prot_ver=2
	processor.error_prot_ecc=2
	processor.dcache.size=32768
	processor.dcache.line_size=32
	processor.dcache.ways=2
	processor.dcache_feature=2
	processor.dcache_mem_cycles=2
	processor.icache.size=32768
	processor.icache.line_size=32
	processor.icache.ways=4
	processor.icache_feature=2
	processor.Xpct_counters=4
	processor.Xpct_interrupt=1
]]></string>
  </configuration>
  <configuration name="architect" filename="build_configuration.txt">
    <string><![CDATA[
######## eia --- com.arc.templates.project.Empty.1_0 ########

# BuildHTMLDocs --- Creates custom HTML documentation in the 'docs' directory.
-build_html_docs true

# BuildSoftware --- Creates software under the Software directory.
-build_software false

# BuildTestCode --- Creates test source code under the 'tests' directory.
-build_test_code true

# BuildScripts --- Creates synthesis scripts and configuration files, which are required for hierarchy generation.
-build_scripts true

# BuildHDL --- Creates the behavioural and synthesisable HDL source code.
-build_hdl true

# CompileTestCode --- Compiles and assembles the test code.
-compile_test_code true

# GenerateStructuralHDL --- Generate the necessary structural HDL
-generate_structural_hdl true

# CompileForHDLSimulation --- Compile the HDL ready for simulation, using the selected Simulator.
-compile_hdl_for_simulation true

# BuildXCAM --- 
# When true, build the XCAM cycle accurate model from HDL.
# This happens only when the VTOC component (in the XCAM library) has been added to the design.
# 
-build_xcam true

# RunARCsyn --- Synthesize design using ARCsyn
-run_arcsyn false

# RunSEIF --- Run Synopsys Embedit Integrator Flow to generate configured memory instances
-run_seif false

# RunARCrams --- Run ARCrams on the current build, this will stitch in vendor supplied RAM models and update the synthesis and simulation environment to use the models.
-run_arcrams false

# RunARCformal --- Formal Verification using ARCformal
-run_arcformal false

# RunARCpower --- Run the Power Analysis using RTL simulation to derive the activity
-run_arcpower false

# compile_nsim_user_extensions --- Build nSIM extensions for any APEX components in the current design using their C Models.
-compile_nsim_user_extension false

# compile_translated_nsim_extensions --- Converts APEX extensions from Verilog to C++ and compiles the model for nSIM.
-compile_translated_nsim_extensions false


######## System --- com.arc.hardware.System.1_0 ########

# Create System
-create com.arc.hardware.System.1_0 System

# Testbench --- 
# Only the rascal testbench is supported, and is required by ARCtest.
# 	
-testbench rascal

# SynthesisLevel --- 
# Sets the top level module name for synthesis.  
# 
# If not using core_sys: for single-core designs, cpu_isle is used; for multicore designs, archipelago is used.
# 	
-synthesislevel cpu_isle/archipelago

# GateLevelSim --- When selected the gate level sim test code and scripts would be installed to run ARCgatesim
-gatesim true

# UserLibraryName --- The name for your HDL library
-library_name user

# OPTION_SimulatorName --- The name of the simulator you wish to use
-simulator vcs

# sim64 --- When selected, the 64-bit version of the simulator is used.  Be sure you have the 64-bit-capable simulator installed  and $ARCHITECT_ROOT/lib/linux_x86_64/ added to your LD_LIBRARY_PATH.
# The setting of this option affects the content of the generated makefile_interface_*_verilog, where * is the simulator name.
-sim64 true

# verilog_2001 --- Enable Verilog 2001 file-io syntax (if false: use pli)
-verilog_2001 true


######## Tool Configuration --- cgen.1_0 ########

# Create Tool Configuration
-create cgen.1_0 "System.Tool Configuration"

# mwdt_version --- Selects the MetaWare version to be used with the TCF file.
# Change from the default to an older or newer toolset version if you want the TCF file to be used with an older or newer version of the MetaWare tools.
-mwdt_version L-2016.06

# code_base_addr --- 
# The base address to assign to the executable code segment in the linker command file when there is no ICCM in the build.  This value is ignored when there is an ICCM.
# 
-code_base_addr 0

# data_base_addr --- 
# The base address to assign to the data segment in the linker command file when the data is not being mapped to a DCCM.  This value is ignored when the data segment is mapped to a DCCM, as in that case the base address of the DCCM memory is used.
# 
# A value of 0xffffffff means that the data segment will not be mapped to any specific address.
# 
-data_base_addr 4294967295


######## Cluster --- com.arc.hardware.CC.Cluster.1_0 ########

# Create Cluster
-create com.arc.hardware.CC.Cluster.1_0 System.Cluster

# cluster_id --- This number uniquely identifies this cluster from all other clusters.  It is placed in the CLUSTER_ID auxiliary register visible in each core of the cluster.
-cluster_id 0

# pipeline_ibps --- Place pipeline registers on internal busses within the cluster to assist timing closure at high frequency. This may be helpful for large clusters and hierarchical layout.
-pipeline_ibps false


######## CPUisle --- com.arc.hardware.HS.CPU_isle.1_0 ########

# Create CPUisle
-create com.arc.hardware.HS.CPU_isle.1_0 System.Cluster.CPUisle

# unique_name --- verilog module modifier prefix
-unique_name ""

# ArcNum --- The processor number as read back in the ARCNUM field of the IDENTITY register.
-arc_num 0

# instances --- 
# The number of instantiations of this core.
# 
-instances 1

# CPUFloorplan --- Floorplan giving relative placement of the RAMs  for the given configuration of ARCv2HS or ARCv2EM in this CPUisle
-cpu_floorplan HS36_base

# userCPUFloorplanPath --- Pathname of user floorplan for the CPU when using a hierarchical implementation
-usercpufloorplan_path ""

# pinLocationConstraintsFile --- Pathname+filename of the physical pin location constraints file or just "side1" (all pins on l.h.s) or "side2" (pins on top only) or "side3" (pins on r.h.s. only) or "side4" (pins on bottom only) to get a template file generated
-pin_location_constraints_file ""


######## ARCv2HS --- com.arc.hardware.HS.ARCv2HS.1_0 ########

# Create ARCv2HS
-create com.arc.hardware.HS.ARCv2HS.1_0 System.Cluster.CPUisle.ARCv2HS

# halt_on_reset --- This defines whether the core is halted initially on reset.
-halt_on_reset true

# byte_order --- This defines the endianness of the core.
-byte_order little

# atomic_option --- This option enables the LLOCK/SCOND (and LLOCKD/SCONDD if ll64_option) instructions
-atomic_option false

# div_rem_option --- The DIV/REM option adds non-blocking multi-cycle implementation of integer divide/remainder functions. Added instructions are DIV, DIVU (integer divide), REM and REMU (integer divide remainder).radix4_enhanced takes 3 to 19 cycles per operation.
-div_rem_option none

# mpy_option --- The Multiplier ISA option allows selection between several multiplier configurations to tradeoff performance with silicon area. Cycle count for all multiply options is fixed:  4 clocks latency with sustained throughput of 1 clock per instruction, including back-to-back multiply-accumulate operations.
# Note that some vector-add/sub operations are included with certain multiply options, in order to enhance performance of light DSP code.
# <pre>
# 
# 
#  option         Instructions
#  ----------     -------------------------------
#       
#  none                       None 
#  mpy                        MPYW/U, MPY/U, MPYH/U
#  plus_dmpy      mpy       + DMACH, DMPYH, MAC, 
#                             VADD2H,..
#  plus_macd      plus_dmpy + MACD, MPYD, 
#                             VMPY2H,...
#  plus_qmacw     plus_macd + DMACWH, DMPYWH,
#                             QMACH, QMPYH,
#                             VADD2,...
# </pre>
# 
-mpy_option none

# stack_checking --- Stack checking is a mechanism for checking stack accesses and raising an exception when a stack overflow or underflow is detected.
-stack_checking false

# ll64_option --- This enables support for Load and Store instructions that transfer register pairs to/from memory.
-ll64_option false

# intvbase_preset --- This sets the upper 22 bits of the interrupt vector base configuration register, VECBASE_AC_BUILD.  On reset, that register is loaded into the interrupt vector base address register, INT_VECTOR_BASE.  Because this value is the upper 22 bits, the vector base is aligned to a 1K-byte boundary.
-intvbase_preset 0

# rgf_num_regs --- This defines the size (in 32b registers) of the processor register file.
-rgf_num_regs 32

# rgf_num_banks --- two or more register banks are useful when Fast IRQ option is selected, but multiple banks may be selected even without Fast IRQ.
-rgf_num_banks 2

# infer_alu_adder --- infer: datapath is described as behavioral code: A + B
# instantiate: datapath is instantiated as a detailed multi-stage code of a carry-lookahead adder.  It is generally preferable to use the infer option when using DesignWare library components and add directives for your target synthesizer.
-infer_alu_adder instantiate

# infer_mpy_wtree --- infer: datapath is described as behavioral code: A * B
# instantiate: datapath is instantiated as a detailed multi-stage code of a Wallace Tree multiplier.   It is preferable  to use the instantiate option; the infer option is intended for simulation only.
-infer_mpy_wtree instantiate

# mem_initiator_ports --- When you have an instruction or data cache this setting is ignored and a path to memory is always configured. In CCM only configurations, setting this to 1 will instantiate a path to external memory for access to non-CCM regions. When any HS core has this set to 1, the BIU component must also have at least one system memory bus
-mem_initiator_ports 1

# power_domains --- Adds isolation/power switch signal inputs for use in UPF-base flow when configuring power domains and generates UPF constraints
-power_domains false

# clock_gating --- This enables the insertion of architectural clock gate elements in the design. By enabling this option, the clocks to various parts of the design will be disabled when the logic they drive is not in use to save power.
-clock_gating true

# br_bc_entries --- The number of entries in the branch cache of the branch prediction unit. An entry can store information about 2 branch or jump instructions. More entries means that the branch predictor can keep track of more branch instructions at the same time.
-br_bc_entries 256

# br_pt_entries --- The number of 2-bit predictors in the branch prediction unit to predict the direction (taken or not taken) of conditional branches. The prediction algorithm is Gshare. More entries means more bits of global branch history can be tracked for more branch or jump instructions at the same time.
-br_pt_entries 2048

# br_rs_entries --- The number of entries in the return address stack of the branch prediction unit. For subroutine calls and returns the return address is predicted using this stack. More entries means deeper subroutine nesting levels can be predicted accurately.
-br_rs_entries 4

# br_bc_full_tag --- The size of the tag used in the branch cache of the branch prediction unit. A full size tag avoids aliasing of branches in the branch cache, but is more costly in hardware.
-br_bc_full_tag false

# br_bc_tag_size --- If a partial tag is used, this option sets the size of that tag. The chance of aliasing declines exponentially with the size of the tag and in a lot of applications a small tag works fine.
-br_bc_tag_size 4

# br_tosq_entries --- The Top-Of-Stack queue keeps track of subroutine calls and returns that are in progress at the same time in the processor. A small number saves hardware, a large number gives highest performance even when there are dense subroutine call and return patterns.
-br_tosq_entries 5

# br_fb_entries --- The size of the instruction buffer that stores instructions that have been fetched but not yet executed in the processor. A larger buffer allows better performance on complex branch and jump patterns at the expense of hardware.
-br_fb_entries 2

# ecc_option --- This specifies error checking for on-chip rams.
# SECDED means single-error correction and double-error detection.
-ecc_option SECDED

# grad_entries --- Graduation entries track post-commit instructions awaiting result retirement. For example, long non-blocking instructions such as divide or certain deeply pipelined APEX instructions.
-grad_entries 8

# uaux_option --- Include a user auxiliary register interface
-uaux_option false


######## Data Cache --- com.arc.hardware.HS.Data_Cache.1_0 ########

# Create Data Cache
-create com.arc.hardware.HS.Data_Cache.1_0 "System.Cluster.CPUisle.ARCv2HS.Data Cache"

# dc_size --- This defines the total size of the Data Cache in bytes.
-dc_size 32768

# dc_bsize --- This defines the cache line length in bytes.
-dc_bsize 32

# dc_bus_data_width --- This defines the cache bus width for refills and evictions.
-dc_bus_data_width 64

# dc_mem_cycles --- This defines the number of cycles dedicated to the Data Cache data memories.
-dc_mem_cycles 2

# dc_mem_posedge --- This option clocks the Data Cache memories on the positive edge of the clock
-dc_mem_posedge false

# dc_uncached_region --- This enables an uncached data cache region specified by a single aux register.  Load/store accesses to this region behave the same as load-direct and store-direct (.di).
-dc_uncached_region false


######## Debug Interface --- com.arc.hardware.HS.Debug_Interface.1_0 ########

# Create Debug Interface
-create com.arc.hardware.HS.Debug_Interface.1_0 "System.Cluster.CPUisle.ARCv2HS.Debug Interface"

######## Instruction Cache --- com.arc.hardware.HS.Instruction_Cache.1_0 ########

# Create Instruction Cache
-create com.arc.hardware.HS.Instruction_Cache.1_0 "System.Cluster.CPUisle.ARCv2HS.Instruction Cache"

# ic_size --- This defines the total size of the instruction cache in bytes.
-ic_size 32768

# ic_ways --- This defines the number of cache ways
-ic_ways 4

# ic_bsize --- This defines the cache line length in bytes.
-ic_bsize 32

# ic_disable_on_reset --- The instruction cache may be enabled immediately after reset, depending on this option.  If this option is set to true, the instruction cache is disabled and instruction fetches bypass the cache, accessing system memory directly.
-ic_disable_on_reset false

# ic_pipeline_bus --- This option inserts a pipeline register on the instruction cache's refill bus from memory. This option can be used to ease timing in configurations where cores are not closely located with level-2 cache, for example.
-ic_pipeline_bus true


######## Interrupt Controller --- com.arc.hardware.HS.Interrupt_Controller.1_0 ########

# Create Interrupt Controller
-create com.arc.hardware.HS.Interrupt_Controller.1_0 "System.Cluster.CPUisle.ARCv2HS.Interrupt Controller"

# number_of_interrupts --- This is the total number of interrupts available to the core.  Some interrupts are allocated statically to a specific interrupt line (for example, timer interrupts).  For more information on Interrupt and register-file options, see DesignWare ARCv2 ISA Programmers Reference Manual.
-number_of_interrupts 32

# number_of_levels --- Priority levels in the interrupt controller.
-number_of_levels 2

# external_interrupts --- This is the total number of interrupt pins available for external system components.  This parameter must be less than the total number of interrupts.
-external_interrupts 18

# firq_option --- This enables the fast-interrupts option, (priority level 0 interrupts), which uses an alternate register bank (if configured) instead of saving the context to memory.
-firq_option true


######## Performance Monitor --- com.arc.hardware.HS.Performance_Monitor.1_0 ########

# Create Performance Monitor
-create com.arc.hardware.HS.Performance_Monitor.1_0 "System.Cluster.CPUisle.ARCv2HS.Performance Monitor"

# pct_counters --- Number of counters for performance monitoring.
-pct_counters 4

# pct_interrupt --- When a counter overflows, an interrupt is generated.
-pct_interrupt true


######## Timer 0 --- com.arc.hardware.HS.Timer_0.1_0 ########

# Create Timer 0
-create com.arc.hardware.HS.Timer_0.1_0 "System.Cluster.CPUisle.ARCv2HS.Timer 0"

# timer_0_int_level --- This sets the interrupt level (and implicitly the priority: level 0 is highest) of timer 0.
-timer_0_int_level 1


######## GSI_apex --- GSI_apex.1_0 ########

# Create GSI_apex
-create GSI_apex.1_0 System.Cluster.CPUisle.ARCv2HS.GSI_apex

# assign_xpubit --- 
#       
# The User Mode Extension Enable register (XPU) controls user-mode access to extension instructions and state. Each extension group is assigned a bit within the XPU register, and this bit may be programmed to enable or disable user-mode access to the extensions within that group.
# <p>
# By default an extension is not assigned a bit in this register.  This means the extension is always available.
# <p>
# If you wish to assign an XPU bit number, select this option.
# 
# 
-assign_xpubit false

# xpubit --- 
# The XPU bit number for this extension.
# 
-xpubit 0


######## Bus interface unit --- com.arc.hardware.CC.Bus_interface_unit.1_0 ########

# Create Bus interface unit
-create com.arc.hardware.CC.Bus_interface_unit.1_0 "System.Cluster.Bus interface unit"

# biu_mem_bus_num --- This specifies the number of memory busses. 
# This option is ignored if a System-level cache is present, as the number of busses is computed automatically.
-biu_mem_bus_num 1

# biu_mem_bus_option --- Protocol to connect to external memory. Please NOTE that BVCI is supported only for single core builds.
-biu_mem_bus_option AHB-Lite

# biu_mem_bus_data_w --- This specifies the data width of the memory busses
-biu_mem_bus_data_w 64

# biu_per_bus_option --- Protocol to connect to external peripherals. This option is only valid when any of the connected core has component dmp_peripheral configured on. Please NOTE that BVCI is supported only for single core builds.
-biu_per_bus_option AHB-Lite

# biu_dmi_bus_num --- This option is only valid when any of the connected core has iccm0_dmi/iccm1_dmi/dccm_dmi configured on. Option 0: No target bus interface for ICCMs and DCCMs; Option 1: All cores ICCMs and DCCMs share same target bus interface; Option 2: All cores ICCMs have dedicated target bus interface, and all cores DCCMs have another dedicated target bus interface
-biu_dmi_bus_num 1

# biu_dmi_bus_option --- Protocol to access CCMs from external bus devices. Please NOTE that BVCI is supported only for single core builds.
-biu_dmi_bus_option AXI

# biu_dmi_bus_data_w --- This specifies the data width of the DMI busses
-biu_dmi_bus_data_w 64

# biu_ioc_bus_num --- This specifies the number of I/O coherency busses. NOTE: the bus protocol and data width of IOC port is specified by -biu_mem_bus_option
-biu_ioc_bus_num 0


######## ARCv2HS CCT --- cct.HS.1_0 ########

# Create ARCv2HS CCT
-create cct.HS.1_0 "System.ARCv2HS CCT"

# cct --- 
# 	Option used to add a CCT to the design for command-line builds
# 	Without this architect can't add this component to a build
# 	via a cmdline -create command.  
# 	with old scripts.
# 	
-cct true

# no_hostlink --- 
# This prevents the inclusion of the hostlink library when compiling
# C or C++ programs.  The resultant executable, if it contains printfs,
# will print to an internal fixed buffer __mwwrite_buf.  
# Other hostlink operations that require debugger assistance, such as file
# opens, will fail.
# 
# Hostlink references incur memory cycles at unpredictable times and 
# so can perturb cycle-timing results.  Without hostlink,
# the debugger will not in any way interfere with the target while it is running.  
# Therefore this option is useful for simulation in which you want precisely the
# same cycle timing to occur each time you run, or for accurate power consumption results.
# 	
-cct_no_hostlink false


######## BusFabric --- com.arc.hardware.ARCv2MSS.BusFabric.1_0 ########

# Create BusFabric
-create com.arc.hardware.ARCv2MSS.BusFabric.1_0 System.BusFabric

# alb_mss_fab_perf_transparent --- If true then there is no latency penalty cost in BusFabric for memory access transaction.
-alb_mss_fab_perf_transparent false

# alb_mss_fab_lat --- This specifies the maximum latency in the master latency units.
-alb_mss_fab_lat 0

# alb_mss_fab_def_lat --- This specifies the latency after reset for the master latency units.
-alb_mss_fab_def_lat 0

# alb_mss_ccm_base --- This specifies the base address at which the ICCM and DCCM DMIs will be placed in the memory map. The address should be divided by 4KB i.e. do not specify the lower 12 bits of the address.
-alb_mss_ccm_base 262144


######## ClkCtrl --- com.arc.hardware.ARCv2MSS.ClkCtrl.1_0 ########

# Create ClkCtrl
-create com.arc.hardware.ARCv2MSS.ClkCtrl.1_0 System.ClkCtrl

# alb_mss_clkctrl_base_addr --- This specifies the clock controller base address in the memory map, divided by 4KB i.e. do not specify the lower 12 bits of the address.
-alb_mss_clkctrl_base_addr 786432

# alb_mss_clkctrl_def_ratio --- This specifies the clock ratio between MSSv2 components and other system components (i.e. cluster/cores) at reset.
-alb_mss_clkctrl_def_ratio 1


######## Implementation --- com.arc.hardware.implementation.1_0 ########

# Create Implementation
-create com.arc.hardware.implementation.1_0 System.Implementation

# ClockSpeed --- Target clock speed of the system
-clock_speed 1100

# ClockSkew --- The clock skew for the system
-clock_skew 0.075

# HoldMargin --- Margin for hold time checks
-hold_margin 0.05

# Floorplan --- Floorplan giving relative placement of the RAMs (or hard macro cpus for 2nd tier floorplan) for the given configuration
-floorplan HS36_base

# JTAGFrequency --- Select the frequency of the JTAG clock Tck (in MHz).
# 
# The JTAG clock speed has to be less than 1/2 of the cpu clock otherwise the signals on the BVCI interface are not guaranteed to be valid.
# 
# NOTE: The RTL simulations will work when the JTAG clock frequency is set to half the CPU clock, however this may not be the case when simulating at gate level due to delays on the IO pads.
# 
# The default is set to 10 MHz so that there is no conflict when simulating with an ARCangel3 at 30MHz. (30 > 10*2)
# 
# The speed of simulation can be greatly increased by using a faster JTAG clock, but a dependency will warn if it exceeds 1/2 of the cpu clock.
# 
-jtag_tclk 10

# execution_trace_level --- 
# This traces committed instructions as they execute, and gathers statistics
# visible in the debugger for counting instructions & cycle delays.
# At the "stats" level ony the statistics are gathered and no trace is printed.
# "file" is equivalent to "full", but the results go to a trace .txt file instead.
# 
-execution_trace_level stats

# zero_based_arcnum --- 
# In a multicore build, number ARCs from 0.
# If this is not selected, arcs are numbered from 1.
# (This provides the initial value to the arcnum signal.)
# 
-zero_based_arcnum true

# generate_ipxact --- 
# Generate ipxact.xml file describing the CPUisle or archipelago frontier
# 
-generate_ipxact false

# ipxact_relative_path_names --- 
# Use relative path names for Verilog files in the ipxact.
# Otherwise, absolute path names are used.
# 
-ipxact_relative_path_names true

# optional_encryption --- 
# When selected, encrypted RTL output is generated.
# 	
-optional_encryption false

# ignore_encrypt_license --- 
# When selected, pretend the encryption license is missing.  For testing.
# 	
-ignore_encrypt_license false

# ignore_clear_license --- 
# When selected, pretend the cleartest license is missing.  For testing.
# 	
-ignore_clear_license false


######## SRAMCtrl --- com.arc.hardware.ARCv2MSS.SRAMCtrl.1_0 ########

# Create SRAMCtrl
-create com.arc.hardware.ARCv2MSS.SRAMCtrl.1_0 System.SRAMCtrl

# alb_mss_mem_base_addr --- This specifies the memory controller base address in the memory map, divided by 4KB i.e. do not specify the lower 12 bits of the address.
-alb_mss_mem_base_addr 0

# alb_mss_mem_lat --- This specifies the maximum latency in the memory latency unit.
-alb_mss_mem_lat 0

# alb_mss_mem_def_lat --- This specifies the latency after reset for the memory latency unit.
-alb_mss_mem_def_lat 0

# alb_mss_mem_size --- This specifies size of the SRAM.
-alb_mss_mem_size 4GB

# alb_mss_mem_is_default_slave --- If true then all transactions without destination will be routed here.
-alb_mss_mem_is_default_slave true


######## Synopsys RM Physical Flow --- com.synopsys.PhysicalFlow_RM.1_0 ########

# Create Synopsys RM Physical Flow
-create com.synopsys.PhysicalFlow_RM.1_0 "System.Synopsys RM Physical Flow"

# SynopsysPhysicalRM --- Add the Synopsys Physical Full Design Flow component
-synopsys_physical_rm true

# UsefulSkew --- Allow the clock paths to macros to be deliberately skewed in order to redistribute available slack on reg2mem and mem2reg path
-useful_skew false

# EnhancedUsefulSkew --- Skew values are calculated via special script that takes acount of multi-cycle path groups
-enhanced_useful_skew false

# ScanChainsReorder --- Instruct the design flow to automatically reorder the scan chain structures.
-scan_reorder true

# userFloorplanPath --- Pathname of user floorplan
-userfloorplan_path ""

# toplevelpinLocationConstraintsFile --- Pathname+filename of the physical pin location constraints file for top-level design
-toplevel_pin_location_constraints_file ""

# MetalFill --- Metal fill step
# NONE
# ICC
# ICV
-metal_fill NONE

# CreateGDS --- Enable GDS streamout
-create_gds false

# AdvancedNode --- Enable Advanced Node routing optimizations
-advanced_node false

# TwoPassFlow --- Two-pass Flow
-two_pass_flow false

# OCVMargin --- OCV Margin (as percentage ratio, default 10%)
-ocv_margin 0.1


######## Synopsys XG Synthesis Flow --- com.synopsys.SynthesisFlow_XG.1_0 ########

# Create Synopsys XG Synthesis Flow
-create com.synopsys.SynthesisFlow_XG.1_0 "System.Synopsys XG Synthesis Flow"

# synopsysSynthesisFlow --- Add the synopsys SynthesisFlow component
-synopsys_xg_synthesis true

# InsertScanChains --- Instruct the design flow to automatically add in the scan chain structures.
-insert_scan_chains true

# AutoUngroup --- Instruct the synthesis compile step to enable auto-ungrouping
-auto_ungroup false

# InsertClockGating --- When set this will cause Clock Gating Logic to be inserted during synthesis.
-insert_clock_gating true

# UPF --- When set this will cause UPF flow (isolation cell insertion) to be configured during synthesis.
-upf false

# DcUltra --- Enables Ultra optimization during synthesis.
-dc_ultra true

# DCTopographicMode --- Use DC Topographic mode for placement aware synthesis.
-dc_topographic true

# Hierarchical --- Enables hierarchical implementation flow.
-hierarchical false


######## VTOC --- com.arc.tools.VTOC.1_0 ########

# Create VTOC
-create com.arc.tools.VTOC.1_0 System.VTOC

# BuildIntegratedModel --- Build an integrated C VTOC model of the ARC IP with a memory subsystem. No memory bus connections are available on this model.
-integrated_model true

# BuildCModel --- Build a C VTOC model of the ARC IP. Memory bus connections are available to connect peripherals/memories.
-c_model false

# BuildSCModel --- Build a SystemC VTOC model of the ARC IP. Memory bus connections are available to connect peripherals/memories.
-sc_model false

# OptimizeModels --- Optimizing the model produces the fastest run-time model, however, it extends the compilation time considerably.
-optimize_models true

# PipemonLevel --- Level of pipeline tracing.
#       0 = off.
#       1 = display counters in debugger.
#       2 = display counters in debugger and write a pipeline transcript file.
-pipemon_level 1

# PipemonFile --- File in which the pipeline transcript is stored when pipemon_level=2.
-pipemon_file pipemon.log

# UseVtocarcLicense --- This option allows the use of the vtocarc license feature. It's true by default and is invisible unless there is a full vtoc license present, in which case the option is visible and can be switched off. If this option is switched off, the verilog files generated by a following project build may be modified and rebuilt using the vtoc make file.
-use_vtocarc_license true

# DumpVcdAll --- This option causes the VTOC model to dump a vcd waveform file containing all of the signals in the model.
-vtoc_dump_vcd_all false

# KeepAllSignals --- This option causes VTOC generate to keep all of the signals in the model. Otherwise, some signals will be optimized out of existence.
-vtoc_keep_all_signals false

# CamModelLicenseName --- This option adds the -model-license-name option to the VTOC command line. It's used to generate the CAM models only. It's an empty string by default and is invisible unless there is an arc_dev license present, in which case the option is visible and can be set to the required value.
-cam_model_license_name ""

# InstrumentBvciBus --- This option adds the BVCI bus instrumentation for the models that get created. Counters are generated for every BVCI initiator on the BVCI system bus and calculate for how many cycles each initiator has used the bus for each run.
-instrument_bvci_bus false

# AddTestInfoDir --- This option adds -test_info_dir to SystemC models with pmu. Supplying a -test_info_dir causes the model to use the debug_brk.txt, reg_init_file.txt and pmu_status_addr.txt files within the given directory to monitor and wake from BRK, FLAG ans SLEEP commands in ISG sequences.
-add_test_info_dir false

# suppress_terminal_window --- 
# If a UART peripheral is included in the design, it is simulated with a window.  
# This may be undesirable for batch regressions. 
# You can use this option disable it.  
# It effectively specifies -no_terminal_window in rascal.env.
# 
-suppress_terminal_window false

# Uart0Input --- Used to specify the file that provides UART0 with characters to receive.
# 
# This is only used if -suppress_terminal_window is true.
-Uart0Input Uart0Input.txt

# Uart0Output --- Used to specify the file that logs the characters UART0 transmits.
-Uart0Output Uart0Output.log

# Uart1Input --- Used to specify the file that provides UART1 with characters to receive.
# 
# This is only used if -suppress_terminal_window is true.
-Uart1Input Uart1Input.txt

# Uart1Output --- Used to specify the file that logs the characters UART1 transmits.
-Uart1Output Uart1Output.log

# Uart2Input --- Used to specify the file that provides UART2 with characters to receive.
# 
# This is only used if -suppress_terminal_window is true.
-Uart2Input Uart2Input.txt

# Uart2Output --- Used to specify the file that logs the characters UART2 transmits.
-Uart2Output Uart2Output.log


]]></string>
  </configuration>
  <configuration name="assembler_defines" filename="core_config.s">
    <string><![CDATA[
.ifndef __core_config_s
	.define __core_config_s, 1
	.define	core_config_cir_identity,0x0000_0052
	.define	core_config_cir_identity_chipid,0
	.define	core_config_cir_identity_arcnum,0
	.define	core_config_cir_identity_arcver,82
	.define	core_config_cir_identity_family,5
	.define	core_config_cir_identity_corever,2
	.define	core_config_bcr_bcr_ver,0x0000_0002
	.define	core_config_bcr_bcr_ver_version,2
	.define	core_config_bcr_vecbase_ac_build,0x0000_0010
	.define	core_config_bcr_rf_build,0x0000_c902
	.define	core_config_bcr_rf_build_version,2
	.define	core_config_bcr_rf_build_p,1
	.define	core_config_bcr_rf_build_e,0
	.define	core_config_bcr_rf_build_r,0
	.define	core_config_bcr_rf_build_b,1
	.define	core_config_bcr_rf_build_d,3
	.define	core_config_bcr_d_cache_build,0x1021_6105
	.define	core_config_bcr_d_cache_build_version,5
	.define	core_config_bcr_d_cache_build_assoc,1
	.define	core_config_bcr_d_cache_build_capacity,6
	.define	core_config_bcr_d_cache_build_bsize,1
	.define	core_config_bcr_d_cache_build_fl,2
	.define	core_config_bcr_d_cache_build_ioc,0
	.define	core_config_bcr_d_cache_build_cp,0
	.define	core_config_bcr_d_cache_build_u,0
	.define	core_config_bcr_d_cache_build_cycles,2
	.define	core_config_bcr_timer_build,0x0001_0104
	.define	core_config_bcr_timer_build_sp1,0
	.define	core_config_bcr_timer_build_sp0,0
	.define	core_config_bcr_timer_build_p1,0
	.define	core_config_bcr_timer_build_p0,1
	.define	core_config_bcr_timer_build_st1,0
	.define	core_config_bcr_timer_build_st0,0
	.define	core_config_bcr_timer_build_rtc,0
	.define	core_config_bcr_timer_build_rtsc_ver,1
	.define	core_config_bcr_timer_build_rtsc,0
	.define	core_config_bcr_timer_build_t0,1
	.define	core_config_bcr_timer_build_t1,0
	.define	core_config_bcr_timer_build_version,4
	.define	core_config_bcr_i_cache_build,0x0022_6204
	.define	core_config_bcr_i_cache_build_assoc,2
	.define	core_config_bcr_i_cache_build_version,4
	.define	core_config_bcr_i_cache_build_capacity,6
	.define	core_config_bcr_i_cache_build_bsize,2
	.define	core_config_bcr_i_cache_build_fl,2
	.define	core_config_bcr_i_cache_build_d,0
	.define	core_config_bcr_swap_build,0x0000_0003
	.define	core_config_bcr_swap_build_version,3
	.define	core_config_bcr_norm_build,0x0000_0003
	.define	core_config_bcr_norm_build_version,3
	.define	core_config_bcr_minmax_build,0x0000_0002
	.define	core_config_bcr_minmax_build_version,2
	.define	core_config_bcr_barrel_build,0x0000_0303
	.define	core_config_bcr_barrel_build_version,3
	.define	core_config_bcr_barrel_build_shift_option,3
	.define	core_config_bcr_bpu_build,0x0188_0005
	.define	core_config_bcr_bpu_build_version,5
	.define	core_config_bcr_bpu_build_bce,0
	.define	core_config_bcr_bpu_build_pte,0
	.define	core_config_bcr_bpu_build_rse,0
	.define	core_config_bcr_bpu_build_ft,0
	.define	core_config_bcr_bpu_build_ts,4
	.define	core_config_bcr_bpu_build_tqe,2
	.define	core_config_bcr_bpu_build_fbe,1
	.define	core_config_bcr_isa_config,0x0244_7402
	.define	core_config_bcr_isa_config_d,0
	.define	core_config_bcr_isa_config_c,2
	.define	core_config_bcr_isa_config_l,0
	.define	core_config_bcr_isa_config_n,1
	.define	core_config_bcr_isa_config_a,0
	.define	core_config_bcr_isa_config_b,0
	.define	core_config_bcr_isa_config_addr_size,4
	.define	core_config_bcr_isa_config_lpc_size,7
	.define	core_config_bcr_isa_config_pc_size,4
	.define	core_config_bcr_isa_config_version,2
	.define	core_config_bcr_ecc_build,0x0000_0202
	.define	core_config_bcr_ecc_build_l,0
	.define	core_config_bcr_ecc_build_wd,0
	.define	core_config_bcr_ecc_build_c,0
	.define	core_config_bcr_ecc_build_rf,0
	.define	core_config_bcr_ecc_build_pc,0
	.define	core_config_bcr_ecc_build_ic,0
	.define	core_config_bcr_ecc_build_dc,0
	.define	core_config_bcr_ecc_build_ip,0
	.define	core_config_bcr_ecc_build_dp,2
	.define	core_config_bcr_ecc_build_version,2
	.define	core_config_bcr_cluster_build,0x0000_0101
	.define	core_config_bcr_cluster_build_c,0
	.define	core_config_bcr_cluster_build_num_entries,0
	.define	core_config_bcr_cluster_build_num_cores,1
	.define	core_config_bcr_cluster_build_version,1
	.define	core_config_bcr_irq_build,0x1112_2001
	.define	core_config_bcr_irq_build_raz,0
	.define	core_config_bcr_irq_build_f,1
	.define	core_config_bcr_irq_build_p,1
	.define	core_config_bcr_irq_build_exts,18
	.define	core_config_bcr_irq_build_irqs,32
	.define	core_config_bcr_irq_build_version,1
	.define	core_config_bcr_pct_build,0x0004_0503
	.define	core_config_bcr_pct_build_version,3
	.define	core_config_bcr_pct_build_s,1
	.define	core_config_bcr_pct_build_i,1
	.define	core_config_bcr_pct_build_c,4
	.define	core_config_bcr_cc_build,0x0071_0002
	.define	core_config_bcr_cc_build_version,2
	.define	core_config_bcr_cc_build_cc,113
	.define	core_config_family,5
	.define	core_config_core_version,2
	.define	core_config_family_name,"arcv2hs"
	.define	core_config_rgf_num_banks,2
	.define	core_config_rgf_banked_regs,32
	.define	core_config_rgf_num_wr_ports,2
	.define	core_config_endian,"little"
	.define	core_config_lpc_size,32
	.define	core_config_pc_size,32
	.define	core_config_addr_size,32
	.define	core_config_unaligned,1
	.define	core_config_code_density,1
	.define	core_config_swap,1
	.define	core_config_bitscan,1
	.define	core_config_mpy_option,"none"
	.define	core_config_shift_assist,1
	.define	core_config_barrel_shifter,1
	.define	core_config_timer0,1
	.define	core_config_timer0_level,1
	.define	core_config_timer0_vector,16
	.define	core_config_bpu_bc_entries,256
	.define	core_config_bpu_pt_entries,2048
	.define	core_config_bpu_rs_entries,4
	.define	core_config_bpu_bc_full_tag,0
	.define	core_config_bpu_bc_tag_size,4
	.define	core_config_bpu_tosq_entries,5
	.define	core_config_bpu_fb_entries,2
	.define	core_config_interrupts_present,1
	.define	core_config_interrupts_number,32
	.define	core_config_interrupts_priorities,2
	.define	core_config_interrupts_externals,18
	.define	core_config_interrupts,32
	.define	core_config_interrupt_priorities,2
	.define	core_config_ext_interrupts,18
	.define	core_config_interrupts_firq,1
	.define	core_config_interrupts_base,0x0
	.define	core_config_error_prot_ver,2
	.define	core_config_error_prot_ecc,2
	.define	core_config_dcache_present,1
	.define	core_config_dcache_size,32768
	.define	core_config_dcache_line_size,32
	.define	core_config_dcache_ways,2
	.define	core_config_dcache_feature,2
	.define	core_config_dcache_mem_cycles,2
	.define	core_config_icache_present,1
	.define	core_config_icache_size,32768
	.define	core_config_icache_line_size,32
	.define	core_config_icache_ways,4
	.define	core_config_icache_feature,2
	.define	core_config_pct_counters,4
	.define	core_config_pct_interrupt,1
.endif ; __core_config_s

]]></string>
  </configuration>
  <configuration name="C_defines" filename="core_config.h">
    <string><![CDATA[
#ifndef __core_config_h
	#define __core_config_h  1
	#define	core_config_cir_identity	0x0000_0052
	#define	core_config_cir_identity_chipid	0
	#define	core_config_cir_identity_arcnum	0
	#define	core_config_cir_identity_arcver	82
	#define	core_config_cir_identity_family	5
	#define	core_config_cir_identity_corever	2
	#define	core_config_bcr_bcr_ver	0x0000_0002
	#define	core_config_bcr_bcr_ver_version	2
	#define	core_config_bcr_vecbase_ac_build	0x0000_0010
	#define	core_config_bcr_rf_build	0x0000_c902
	#define	core_config_bcr_rf_build_version	2
	#define	core_config_bcr_rf_build_p	1
	#define	core_config_bcr_rf_build_e	0
	#define	core_config_bcr_rf_build_r	0
	#define	core_config_bcr_rf_build_b	1
	#define	core_config_bcr_rf_build_d	3
	#define	core_config_bcr_d_cache_build	0x1021_6105
	#define	core_config_bcr_d_cache_build_version	5
	#define	core_config_bcr_d_cache_build_assoc	1
	#define	core_config_bcr_d_cache_build_capacity	6
	#define	core_config_bcr_d_cache_build_bsize	1
	#define	core_config_bcr_d_cache_build_fl	2
	#define	core_config_bcr_d_cache_build_ioc	0
	#define	core_config_bcr_d_cache_build_cp	0
	#define	core_config_bcr_d_cache_build_u	0
	#define	core_config_bcr_d_cache_build_cycles	2
	#define	core_config_bcr_timer_build	0x0001_0104
	#define	core_config_bcr_timer_build_sp1	0
	#define	core_config_bcr_timer_build_sp0	0
	#define	core_config_bcr_timer_build_p1	0
	#define	core_config_bcr_timer_build_p0	1
	#define	core_config_bcr_timer_build_st1	0
	#define	core_config_bcr_timer_build_st0	0
	#define	core_config_bcr_timer_build_rtc	0
	#define	core_config_bcr_timer_build_rtsc_ver	1
	#define	core_config_bcr_timer_build_rtsc	0
	#define	core_config_bcr_timer_build_t0	1
	#define	core_config_bcr_timer_build_t1	0
	#define	core_config_bcr_timer_build_version	4
	#define	core_config_bcr_i_cache_build	0x0022_6204
	#define	core_config_bcr_i_cache_build_assoc	2
	#define	core_config_bcr_i_cache_build_version	4
	#define	core_config_bcr_i_cache_build_capacity	6
	#define	core_config_bcr_i_cache_build_bsize	2
	#define	core_config_bcr_i_cache_build_fl	2
	#define	core_config_bcr_i_cache_build_d	0
	#define	core_config_bcr_swap_build	0x0000_0003
	#define	core_config_bcr_swap_build_version	3
	#define	core_config_bcr_norm_build	0x0000_0003
	#define	core_config_bcr_norm_build_version	3
	#define	core_config_bcr_minmax_build	0x0000_0002
	#define	core_config_bcr_minmax_build_version	2
	#define	core_config_bcr_barrel_build	0x0000_0303
	#define	core_config_bcr_barrel_build_version	3
	#define	core_config_bcr_barrel_build_shift_option	3
	#define	core_config_bcr_bpu_build	0x0188_0005
	#define	core_config_bcr_bpu_build_version	5
	#define	core_config_bcr_bpu_build_bce	0
	#define	core_config_bcr_bpu_build_pte	0
	#define	core_config_bcr_bpu_build_rse	0
	#define	core_config_bcr_bpu_build_ft	0
	#define	core_config_bcr_bpu_build_ts	4
	#define	core_config_bcr_bpu_build_tqe	2
	#define	core_config_bcr_bpu_build_fbe	1
	#define	core_config_bcr_isa_config	0x0244_7402
	#define	core_config_bcr_isa_config_d	0
	#define	core_config_bcr_isa_config_c	2
	#define	core_config_bcr_isa_config_l	0
	#define	core_config_bcr_isa_config_n	1
	#define	core_config_bcr_isa_config_a	0
	#define	core_config_bcr_isa_config_b	0
	#define	core_config_bcr_isa_config_addr_size	4
	#define	core_config_bcr_isa_config_lpc_size	7
	#define	core_config_bcr_isa_config_pc_size	4
	#define	core_config_bcr_isa_config_version	2
	#define	core_config_bcr_ecc_build	0x0000_0202
	#define	core_config_bcr_ecc_build_l	0
	#define	core_config_bcr_ecc_build_wd	0
	#define	core_config_bcr_ecc_build_c	0
	#define	core_config_bcr_ecc_build_rf	0
	#define	core_config_bcr_ecc_build_pc	0
	#define	core_config_bcr_ecc_build_ic	0
	#define	core_config_bcr_ecc_build_dc	0
	#define	core_config_bcr_ecc_build_ip	0
	#define	core_config_bcr_ecc_build_dp	2
	#define	core_config_bcr_ecc_build_version	2
	#define	core_config_bcr_cluster_build	0x0000_0101
	#define	core_config_bcr_cluster_build_c	0
	#define	core_config_bcr_cluster_build_num_entries	0
	#define	core_config_bcr_cluster_build_num_cores	1
	#define	core_config_bcr_cluster_build_version	1
	#define	core_config_bcr_irq_build	0x1112_2001
	#define	core_config_bcr_irq_build_raz	0
	#define	core_config_bcr_irq_build_f	1
	#define	core_config_bcr_irq_build_p	1
	#define	core_config_bcr_irq_build_exts	18
	#define	core_config_bcr_irq_build_irqs	32
	#define	core_config_bcr_irq_build_version	1
	#define	core_config_bcr_pct_build	0x0004_0503
	#define	core_config_bcr_pct_build_version	3
	#define	core_config_bcr_pct_build_s	1
	#define	core_config_bcr_pct_build_i	1
	#define	core_config_bcr_pct_build_c	4
	#define	core_config_bcr_cc_build	0x0071_0002
	#define	core_config_bcr_cc_build_version	2
	#define	core_config_bcr_cc_build_cc	113
	#define	core_config_family	5
	#define	core_config_core_version	2
	#define	core_config_family_name	"arcv2hs"
	#define	core_config_rgf_num_banks	2
	#define	core_config_rgf_banked_regs	32
	#define	core_config_rgf_num_wr_ports	2
	#define	core_config_endian	"little"
	#define	core_config_lpc_size	32
	#define	core_config_pc_size	32
	#define	core_config_addr_size	32
	#define	core_config_unaligned	1
	#define	core_config_code_density	1
	#define	core_config_swap	1
	#define	core_config_bitscan	1
	#define	core_config_mpy_option	"none"
	#define	core_config_shift_assist	1
	#define	core_config_barrel_shifter	1
	#define	core_config_timer0	1
	#define	core_config_timer0_level	1
	#define	core_config_timer0_vector	16
	#define	core_config_bpu_bc_entries	256
	#define	core_config_bpu_pt_entries	2048
	#define	core_config_bpu_rs_entries	4
	#define	core_config_bpu_bc_full_tag	0
	#define	core_config_bpu_bc_tag_size	4
	#define	core_config_bpu_tosq_entries	5
	#define	core_config_bpu_fb_entries	2
	#define	core_config_interrupts_present	1
	#define	core_config_interrupts_number	32
	#define	core_config_interrupts_priorities	2
	#define	core_config_interrupts_externals	18
	#define	core_config_interrupts	32
	#define	core_config_interrupt_priorities	2
	#define	core_config_ext_interrupts	18
	#define	core_config_interrupts_firq	1
	#define	core_config_interrupts_base	0x0
	#define	core_config_error_prot_ver	2
	#define	core_config_error_prot_ecc	2
	#define	core_config_dcache_present	1
	#define	core_config_dcache_size	32768
	#define	core_config_dcache_line_size	32
	#define	core_config_dcache_ways	2
	#define	core_config_dcache_feature	2
	#define	core_config_dcache_mem_cycles	2
	#define	core_config_icache_present	1
	#define	core_config_icache_size	32768
	#define	core_config_icache_line_size	32
	#define	core_config_icache_ways	4
	#define	core_config_icache_feature	2
	#define	core_config_pct_counters	4
	#define	core_config_pct_interrupt	1
#endif /* __core_config_h */

]]></string>
  </configuration>
  <configuration name="core" filename="core.props">
    <string><![CDATA[
	core_config.cir.identity=0x0000_0052
	core_config.cir.identity.chipid=0
	core_config.cir.identity.arcnum=0
	core_config.cir.identity.arcver=82
	core_config.cir.identity.family=5
	core_config.cir.identity.corever=2
	core_config.bcr.bcr_ver=0x0000_0002
	core_config.bcr.bcr_ver.version=2
	core_config.bcr.vecbase_ac_build=0x0000_0010
	core_config.bcr.rf_build=0x0000_c902
	core_config.bcr.rf_build.version=2
	core_config.bcr.rf_build.p=1
	core_config.bcr.rf_build.e=0
	core_config.bcr.rf_build.r=0
	core_config.bcr.rf_build.b=1
	core_config.bcr.rf_build.d=3
	core_config.bcr.d_cache_build=0x1021_6105
	core_config.bcr.d_cache_build.version=5
	core_config.bcr.d_cache_build.assoc=1
	core_config.bcr.d_cache_build.capacity=6
	core_config.bcr.d_cache_build.bsize=1
	core_config.bcr.d_cache_build.fl=2
	core_config.bcr.d_cache_build.ioc=0
	core_config.bcr.d_cache_build.cp=0
	core_config.bcr.d_cache_build.u=0
	core_config.bcr.d_cache_build.cycles=2
	core_config.bcr.timer_build=0x0001_0104
	core_config.bcr.timer_build.sp1=0
	core_config.bcr.timer_build.sp0=0
	core_config.bcr.timer_build.p1=0
	core_config.bcr.timer_build.p0=1
	core_config.bcr.timer_build.st1=0
	core_config.bcr.timer_build.st0=0
	core_config.bcr.timer_build.rtc=0
	core_config.bcr.timer_build.rtsc_ver=1
	core_config.bcr.timer_build.rtsc=0
	core_config.bcr.timer_build.t0=1
	core_config.bcr.timer_build.t1=0
	core_config.bcr.timer_build.version=4
	core_config.bcr.i_cache_build=0x0022_6204
	core_config.bcr.i_cache_build.assoc=2
	core_config.bcr.i_cache_build.version=4
	core_config.bcr.i_cache_build.capacity=6
	core_config.bcr.i_cache_build.bsize=2
	core_config.bcr.i_cache_build.fl=2
	core_config.bcr.i_cache_build.d=0
	core_config.bcr.swap_build=0x0000_0003
	core_config.bcr.swap_build.version=3
	core_config.bcr.norm_build=0x0000_0003
	core_config.bcr.norm_build.version=3
	core_config.bcr.minmax_build=0x0000_0002
	core_config.bcr.minmax_build.version=2
	core_config.bcr.barrel_build=0x0000_0303
	core_config.bcr.barrel_build.version=3
	core_config.bcr.barrel_build.shift_option=3
	core_config.bcr.bpu_build=0x0188_0005
	core_config.bcr.bpu_build.version=5
	core_config.bcr.bpu_build.bce=0
	core_config.bcr.bpu_build.pte=0
	core_config.bcr.bpu_build.rse=0
	core_config.bcr.bpu_build.ft=0
	core_config.bcr.bpu_build.ts=4
	core_config.bcr.bpu_build.tqe=2
	core_config.bcr.bpu_build.fbe=1
	core_config.bcr.isa_config=0x0244_7402
	core_config.bcr.isa_config.d=0
	core_config.bcr.isa_config.c=2
	core_config.bcr.isa_config.l=0
	core_config.bcr.isa_config.n=1
	core_config.bcr.isa_config.a=0
	core_config.bcr.isa_config.b=0
	core_config.bcr.isa_config.addr_size=4
	core_config.bcr.isa_config.lpc_size=7
	core_config.bcr.isa_config.pc_size=4
	core_config.bcr.isa_config.version=2
	core_config.bcr.ecc_build=0x0000_0202
	core_config.bcr.ecc_build.l=0
	core_config.bcr.ecc_build.wd=0
	core_config.bcr.ecc_build.c=0
	core_config.bcr.ecc_build.rf=0
	core_config.bcr.ecc_build.pc=0
	core_config.bcr.ecc_build.ic=0
	core_config.bcr.ecc_build.dc=0
	core_config.bcr.ecc_build.ip=0
	core_config.bcr.ecc_build.dp=2
	core_config.bcr.ecc_build.version=2
	core_config.bcr.cluster_build=0x0000_0101
	core_config.bcr.cluster_build.c=0
	core_config.bcr.cluster_build.num_entries=0
	core_config.bcr.cluster_build.num_cores=1
	core_config.bcr.cluster_build.version=1
	core_config.bcr.irq_build=0x1112_2001
	core_config.bcr.irq_build.raz=0
	core_config.bcr.irq_build.f=1
	core_config.bcr.irq_build.p=1
	core_config.bcr.irq_build.exts=18
	core_config.bcr.irq_build.irqs=32
	core_config.bcr.irq_build.version=1
	core_config.bcr.pct_build=0x0004_0503
	core_config.bcr.pct_build.version=3
	core_config.bcr.pct_build.s=1
	core_config.bcr.pct_build.i=1
	core_config.bcr.pct_build.c=4
	core_config.bcr.cc_build=0x0071_0002
	core_config.bcr.cc_build.version=2
	core_config.bcr.cc_build.cc=113
	core_config.family=5
	core_config.core_version=2
	core_config.family_name=arcv2hs
	core_config.rgf_num_banks=2
	core_config.rgf_banked_regs=32
	core_config.rgf_num_wr_ports=2
	core_config.endian=little
	core_config.lpc_size=32
	core_config.pc_size=32
	core_config.addr_size=32
	core_config.unaligned=1
	core_config.code_density=1
	core_config.swap=1
	core_config.bitscan=1
	core_config.mpy_option=none
	core_config.shift_assist=1
	core_config.barrel_shifter=1
	core_config.timer0=1
	core_config.timer0_level=1
	core_config.timer0.vector=16
	core_config.bpu_bc_entries=256
	core_config.bpu_pt_entries=2048
	core_config.bpu_rs_entries=4
	core_config.bpu_bc_full_tag=0
	core_config.bpu_bc_tag_size=4
	core_config.bpu_tosq_entries=5
	core_config.bpu_fb_entries=2
	core_config.interrupts.present=1
	core_config.interrupts.number=32
	core_config.interrupts.priorities=2
	core_config.interrupts.externals=18
	core_config.interrupts=32
	core_config.interrupt_priorities=2
	core_config.ext_interrupts=18
	core_config.interrupts.firq=1
	core_config.interrupts.base=0x0
	core_config.error_prot_ver=2
	core_config.error_prot_ecc=2
	core_config.dcache.present=1
	core_config.dcache.size=32768
	core_config.dcache.line_size=32
	core_config.dcache.ways=2
	core_config.dcache_feature=2
	core_config.dcache_mem_cycles=2
	core_config.icache.present=1
	core_config.icache.size=32768
	core_config.icache.line_size=32
	core_config.icache.ways=4
	core_config.icache_feature=2
	core_config.pct_counters=4
	core_config.pct_interrupt=1
]]></string>
  </configuration>
  <configuration name="gcc_compiler" filename="gcc.arg">
    <string><![CDATA[
	-mcpu=archs
	-mcode-density
	-mrgf-banked-regs=32
	-mlittle-endian
	-matomic
	-mll64
	-mdiv-rem
	-mswap
	-mnorm
	-mmpy-option=plus_dmpy
	-mbarrel-shifter
	--param l1-cache-size=32768
	--param l1-cache-line-size=32
]]></string>
  </configuration>
  <configuration name="linker_command_file" filename="link_cmd.txt">
    <string><![CDATA[
SECTIONS {
    GROUP BIND(0): {
        .vectors (TEXT) SIZE(DEFINED _IVTSIZE?_IVTSIZE:264): {}
	.text? : { *('.text$crt*') }
    	* (TEXT): {}
    	* (LIT): {}
	}
    GROUP: {
	/* _SDA_BASE_ computed implicitly */
        .sdata?: {}
        .sbss?: {}
        * (DATA): {}
        * (BSS): {}
        .stack ALIGN(4) SIZE(DEFINED _STACKSIZE?_STACKSIZE:65536): {}
        .heap? ALIGN(4) SIZE(DEFINED _HEAPSIZE?_HEAPSIZE:0): {}
	}
    }

]]></string>
  </configuration>
  <configuration name="gnu_linker_command_file" filename="memory.x">
    <string><![CDATA[
MEMORY {
    SYSTEM0  : ORIGIN = 0x00000000, LENGTH = 0x100000000
    }
REGION_ALIAS("startup", SYSTEM0)
REGION_ALIAS("text", SYSTEM0)
REGION_ALIAS("data", SYSTEM0)
REGION_ALIAS("sdata", SYSTEM0)
PROVIDE (__stack_top = (0xffffffff & -4 ));
PROVIDE (__end_heap =  (0xffffffff ));
]]></string>
  </configuration>
  <configuration name="apex_header" filename="apexextensions.h">
    <string><![CDATA[

/* **** DO NOT EDIT - this file is generated by ARChitect2 ****
 *
 * Description: Header file declaring the compiler extensions for apex components 
 */

#ifndef _apexextensions_H_
#define _apexextensions_H_

#define APEX_GSI_APEX_GSI_APEX_PRESENT	1

// User extension aux register BankEn
#define AR_BANKEN 0xfffff832
#pragma Aux_register(0xfffff832, name=>"BankEn")

// User extension aux register IDAR
#define AR_IDAR 0xfffffa00
#pragma Aux_register(0xfffffa00, name=>"IDAR")

// User extension aux register IDR0
#define AR_IDR0 0xfffffa01
#pragma Aux_register(0xfffffa01, name=>"IDR0")

// User extension aux register IDR1
#define AR_IDR1 0xfffffa02
#pragma Aux_register(0xfffffa02, name=>"IDR1")

// User extension aux register IDR2
#define AR_IDR2 0xfffffa03
#pragma Aux_register(0xfffffa03, name=>"IDR2")

// User extension aux register IDR3
#define AR_IDR3 0xfffffa04
#pragma Aux_register(0xfffffa04, name=>"IDR3")

// User extension aux register IDR_ECC
#define AR_IDR_ECC 0xfffffa05
#pragma Aux_register(0xfffffa05, name=>"IDR_ECC")

// User extension aux register RSP2K_0
#define AR_RSP2K_0 0xfffffb00
#pragma Aux_register(0xfffffb00, name=>"RSP2K_0")

// User extension aux register RSP2K_1
#define AR_RSP2K_1 0xfffffb01
#pragma Aux_register(0xfffffb01, name=>"RSP2K_1")

// User extension aux register RSP2K_2
#define AR_RSP2K_2 0xfffffb02
#pragma Aux_register(0xfffffb02, name=>"RSP2K_2")

// User extension aux register RSP2K_3
#define AR_RSP2K_3 0xfffffb03
#pragma Aux_register(0xfffffb03, name=>"RSP2K_3")

// User extension aux register RSP32K
#define AR_RSP32K 0xfffffb04
#pragma Aux_register(0xfffffb04, name=>"RSP32K")

// User extension aux register IFIN
#define AR_IFIN 0xfffffb05
#pragma Aux_register(0xfffffb05, name=>"IFIN")

// User extension aux register VD16_NOP
#define AR_VD16_NOP 0xfffffb07
#pragma Aux_register(0xfffffb07, name=>"VD16_NOP")

// User extension aux register VD64_NOP
#define AR_VD64_NOP 0xfffffb08
#pragma Aux_register(0xfffffb08, name=>"VD64_NOP")

// User extension instruction write_reg
extern long write_reg(long,long);
#pragma intrinsic(write_reg,opcode=>7,sub_opcode=>2)

// User extension instruction md
extern long md(long);
#pragma intrinsic(md,opcode=>7,sub_opcode=>0)

// User extension instruction RSPrd
extern long RSPrd(long);
#pragma intrinsic(RSPrd,opcode=>7,sub_opcode=>1, effects=>"auxreg=0xfffff832:is_written; auxreg=0xfffffa00:is_written; auxreg=0xfffffa01:is_written; auxreg=0xfffffa02:is_written; auxreg=0xfffffa03:is_written; auxreg=0xfffffa04:is_written; auxreg=0xfffffa05:is_written; auxreg=0xfffffb00:is_written; auxreg=0xfffffb01:is_written; auxreg=0xfffffb02:is_written; auxreg=0xfffffb03:is_written; auxreg=0xfffffb04:is_written; auxreg=0xfffffb05:is_written; auxreg=0xfffffb07:is_written; auxreg=0xfffffb08:is_written")

// User extension instruction test_barrier
extern long test_barrier(long);
#pragma intrinsic(test_barrier,opcode=>7,sub_opcode=>3,latency_cycles=> 6)

// User extension instruction read_reg
extern long read_reg(long);
#pragma intrinsic(read_reg,opcode=>7,sub_opcode=>4)


#endif


]]></string>
  </configuration>
  <configuration name="apex_assembly" filename="apexextensions.s">
    <string><![CDATA[

; Assembler directives for eia extensions in this design
.set apex_gsi_apex_present,1
.set apex_gsi_apex_gsi_apex_present,1
.extAuxRegister BankEn,0xfffff832,r|w
.extAuxRegister IDAR,0xfffffa00,r|w
.extAuxRegister IDR0,0xfffffa01,r|w
.extAuxRegister IDR1,0xfffffa02,r|w
.extAuxRegister IDR2,0xfffffa03,r|w
.extAuxRegister IDR3,0xfffffa04,r|w
.extAuxRegister IDR_ECC,0xfffffa05,r|w
.extAuxRegister RSP2K_0,0xfffffb00,r
.extAuxRegister RSP2K_1,0xfffffb01,r
.extAuxRegister RSP2K_2,0xfffffb02,r
.extAuxRegister RSP2K_3,0xfffffb03,r
.extAuxRegister RSP32K,0xfffffb04,r
.extAuxRegister IFIN,0xfffffb05,r|w
.extAuxRegister VD16_NOP,0xfffffb07,r|w
.extAuxRegister VD64_NOP,0xfffffb08,r|w
.extInstruction write_reg,7,2,SUFFIX_COND,SYNTAX_3OP
.extInstruction md,7,0,FLAGS_NONE,SYNTAX_2OP
.extInstruction RSPrd,7,1,FLAGS_NONE,SYNTAX_2OP
.extInstruction test_barrier,7,3,FLAGS_NONE,SYNTAX_2OP
.extInstruction read_reg,7,4,FLAGS_NONE,SYNTAX_2OP

]]></string>
  </configuration>
</config_list>

